openapi: 3.0.0
servers:
  - description: prod
    url: https://noita-together.skyefullofbreeze.com/api
  - description: dev
    url: http://localhost:3000/api
info:
  version: "1.0.0"
  title: noita-together-api
  description: Noita Together API for login/stats
paths:
  /auth/login:
    get:
      tags:
        - Authentication
      description: Redirects the user to twitch authentication via OIDC
      operationId: authLogin
      parameters:
        - in: query
          name: deviceCode
          description: 8 digit device code for device authorization
          schema:
            type: number
            minLength: 8
            maxLength: 8
      responses:
        '302':
          description: Redirect to TWITCH login
          headers:
            Location:
              schema:
                type: string
  /auth/code:
    get:
      tags:
        - Authentication
      description: Authorization Grant Flow Code endpoint from twitch
      operationId: authCode
      parameters:
        - in: query
          name: code
          description: Authorization Grant Code
          schema:
            type: string
        - in: query
          name: state
          description: Authorization flow state, sometimes is our device authorization code passed via login
          schema:
            type: string
      responses:
        '500':
          description: Server Error
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to retrieve tokens :("
        '200':
          description: Successful login when using device authorization flow. The user receives the tokens via the websocket connection
          content:
            'text/html':
              schema:
                type: string
                example: "you can close this."
        '302':
          description: Redirect to TWITCH login
          headers:
            Location:
              schema:
                type: string
                example: http://localhost:3000/?token=${accessToken}&refresh=${refreshToken}&expires_in=28800
  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh Access Token
      parameters:
        - in: header
          name: Authorization
          description: Refresh token, as 'Bearer $token'
          schema:
            type: string
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Access token
                  expires_in:
                    type: string
                    description: Token expiration in seconds from now
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: User Not Found
          content:
            text/plain:
              schema:
                type: string
        '502':
          description: Failed to get Twitch user data
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Failed to interface with the database
          content:
            text/plain:
              schema:
                type: string
#    schemas:
#        LightingSummary:
#            type: object
#            properties:
#                zones:
#                    type: array
#                    items:
#                        $ref: '#/components/schemas/LightingZone'
#                zoneStatus:
#                    type: array
#                    items:
#                        $ref: '#/components/schemas/LightingZoneStatus'
#            description: ok
#        LightingZone:
#            type: object
#            properties:
#                id:
#                    type: string
#                name:
#                    type: string
#                deviceId:
#                    type: integer
#                    format: int32
#                deviceType:
#                    type: string
#                    enum:
#                        - dimmer
#                        - switch
#                zone:
#                    type: string
#        LightingZoneStatus:
#            type: object
#            properties:
#                id:
#                    type: string
#                name:
#                    type: string
#                lastUpdate:
#                    type: string
#                    format: date-time
#                level:
#                    type: integer
#                    format: int32
#            description: the status of the lighting zone.
#        TemperatureSummary:
#            type: object
#            properties:
#                zones:
#                    type: array
#                    items:
#                        $ref: '#/components/schemas/TemperatureZone'
#                zoneStatus:
#                    type: array
#                    items:
#                        $ref: '#/components/schemas/TemperatueZoneStatus'
#            description: ok
#        TemperatureZone:
#            type: object
#            required:
#                - id
#                - name
#            properties:
#                id:
#                    type: integer
#                    format: int32
#                    description: the unique identifier for the zone
#                name:
#                    type: string
#                inputPosition:
#                    type: integer
#                    format: int32
#                outputPosition:
#                    type: integer
#                    format: int32
#                zone:
#                    type: string
#            description: a single temperature zone
#        TemperatueZoneStatus:
#            type: object
#            required:
#                - id
#                - timestamp
#                - value
#            properties:
#                id:
#                    type: string
#                    description: the unique identifier for the zone
#                name:
#                    type: string
#                    description: the name of the zone
#                value:
#                    type: number
#                    format: double
#                    description: the temperature in the zone
#                units:
#                    type: string
#                    description: the temperature units
#                    enum:
#                        - celsius
#                        - fahrenheit
#                    default: fahrenheit
#                timestamp:
#                    type: string
#                    format: date-time
#                    description: the timestamp when the temperature was measured
#            description: status of a single zone
#        ApiResponse:
#            type: object
#            properties:
#                code:
#                    type: integer
#                    format: int32
#                message:
#                    type: string
#                    example: everything is ok
#        HeaterState:
#            type: object
#            properties:
#                id:
#                    type: string
#                state:
#                    type: string
#        DeviceState:
#            type: object
#            properties:
#                id:
#                    type: string
#                name:
#                    type: string
#                lastUpdate:
#                    type: string
#                    format: date-time
#                level:
#                    type: integer
#                    format: int32
#        ForecastResponse:
#            type: object
#            properties:
#                city:
#                    $ref: '#/components/schemas/City'
#                values:
#                    type: array
#                    items:
#                        $ref: '#/components/schemas/Forecast'
#        Forecast:
#            type: object
#            properties:
#                date:
#                    type: string
#                    format: date-time
#                pressure:
#                    type: number
#                    format: double
#                humidity:
#                    type: integer
#                    format: int32
#                windSpeed:
#                    type: number
#                    format: double
#                clouds:
#                    type: integer
#                    format: int32
#                temperature:
#                    $ref: '#/components/schemas/ForecastTemperature'
#                weather:
#                    $ref: '#/components/schemas/WeatherForecast'
#        City:
#            type: object
#            properties:
#                id:
#                    type: integer
#                    format: int64
#                name:
#                    type: string
#                lat:
#                    type: number
#                    format: double
#                lon:
#                    type: number
#                    format: double
#                country:
#                    type: string
#        ForecastTemperature:
#            type: object
#            properties:
#                low:
#                    type: number
#                    format: double
#                high:
#                    type: number
#                    format: double
#                morning:
#                    type: number
#                    format: double
#                day:
#                    type: number
#                    format: double
#                evening:
#                    type: number
#                    format: double
#                night:
#                    type: number
#                    format: double
#        WeatherForecast:
#            type: object
#            properties:
#                summary:
#                    type: string
#                description:
#                    type: string
#                icon:
#                    type: string
#        DeviceRegistrationInfo:
#            type: object
#            properties:
#                uri:
#                    type: string
#                    format: uri
#                    example: 'http://10.0.0.220:8080'
#                id:
#                    type: string
#                    format: uuid
#                    example: 0729a580-2240-11e6-9eb5-0002a5d5c51b